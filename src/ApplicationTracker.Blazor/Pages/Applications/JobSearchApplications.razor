@*@page "/search/{searchId:int}/applications/{applicationId:int}"*@

@using ApplicationTracker.Blazor.Pages.Applications.Components
@using ApplicationTracker.Core.Features.Applications.Queries.GetApplication
@using ApplicationTracker.Core.Features.Applications.Queries.GetApplications
@using System.Linq

@inject MediatR.IMediator _mediator;
@inject ApplicationTracker.Core.Persistence.IApplicationDbContext _context;
@inject IJSRuntime js
@inject NavigationManager _navigation;

<div class="root">
    <div class="sidebar bg-light border-top border-right">
        @foreach (var app in _applications)
        {
            string classes = $"app-item border-bottom {((ApplicationId == app.Id) ? "bg-primary text-white" : "")}";
            <div class="@classes" @onclick="@(() => HandleSelectApplication(app.Id))">
                <p class="title m-0 font-weight-bold">@app.JobTitle</p>
                <p class="organization">@app.OrganizationName</p>
            </div>
        }
    </div>
    <div class="content border-top">
        @if (_selectedApplication != null)
        {
            <ApplicationDetails Application="@_selectedApplication" 
                                OnApplicationUpdate="HandleSelectedApplicationUpdate" />
        }
        else
        {
            <p class="lead m-5">Select an application on the left.</p>
        }

        <div>
            <p>Render count: @renderCounter</p>
            <p>Fetch count: @fetchCounter</p>
            <p>Application count: @applicationCounter</p>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int SearchId { get; set; }

    [Parameter]
    public int ApplicationId { get; set; }

    ApplicationDto _selectedApplication;



    private int renderCounter = 0;
    private int fetchCounter = 0;
    private int applicationCounter = 0;

    private List<ApplicationSummaryDto> _applications = new List<ApplicationSummaryDto>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        renderCounter++;
    }

    protected override async Task OnParametersSetAsync()
    {
        if (_applications.Count == 0)
        {
            fetchCounter++;
            var apps = await _mediator.Send(new GetApplicationsQuery { ParentSearchId = SearchId });

            _applications = (apps?.Applications ?? new List<ApplicationSummaryDto>())
                .OrderByDescending(a => a.Created)
                .ToList();
        }

        if (_selectedApplication == null || _selectedApplication.Id != ApplicationId)
        {
            _selectedApplication = await _mediator.Send(new GetApplicationQuery { Id = ApplicationId });
            applicationCounter++;
        }

        await base.OnParametersSetAsync();
    }


    private void HandleSelectApplication(int applicationId)
    {
        ApplicationId = applicationId;
        applicationCounter++;
        _navigation.NavigateTo($"/search/{SearchId}/applications/{ApplicationId}");
    }

    private async Task HandleSelectedApplicationUpdate()
    {
        _selectedApplication = await _mediator.Send(new GetApplicationQuery { Id = ApplicationId });
        StateHasChanged();
    }
}